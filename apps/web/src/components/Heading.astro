---
export enum HeadingType {
    H1 = "h1",
    H2 = "h2",
    H3 = "h3",
    H4 = "h4",
    H5 = "h5",
    H6 = "h6",
}

export enum HeadingColor {
    Default = "text-gray-dark",
    White = "text-white",
}

interface Props {
    class?: string
    type: HeadingType;
    color?: HeadingColor;
}

const { class: overrideClass, color = HeadingColor.Default, type } = Astro.props;


---

<>
    {
        type === HeadingType.H1 && (
            <h1 class={`lg:text-7xl sm:text-6xl font-bold mb-4 font-heading ${color} ${overrideClass}`}>
                <slot />
            </h1>
        )
    }
    {
        type === HeadingType.H2 && (
            <h2 class={`text-2xl font-bold font-heading ${color} ${overrideClass}`}>
                <slot />
            </h2>
        )
    }
    {
        type === HeadingType.H3 && (
            <h3 class={`text-xl font-semibold font-heading ${color} ${overrideClass}`}>
                <slot />
            </h3>
        )
    }
    {
        type === HeadingType.H4 && (
            <h4 class={`text-xl font-medium font-heading ${color} ${overrideClass}`}>
                <slot />
            </h4>
        )
    }
    {
        type === HeadingType.H5 && (
            <h5 class={`text-lg font-bold font-heading ${color} ${overrideClass}`}>
                <slot />
            </h1>
        )
    }
    {
        type === HeadingType.H6 && (
            <h6 class={`text-base font-bold font-heading ${color} ${overrideClass}`}>
                <slot />
            </h1>
        )
    }
</>
