---
export enum HeadingType {
    H1 = "h1",
    H2 = "h2",
    H3 = "h3",
    H4 = "h4",
    H5 = "h5",
    H6 = "h6",
}

export enum HeadingColor {
    Default = "text-gray-dark",
    White = "text-white",
}

interface Props {
    id?: string;
    class?: string;
    type: HeadingType;
    color?: HeadingColor;
    anchor?: string;
}

const { id, class: overrideClass, color = HeadingColor.Default, type } = Astro.props;
---

<>
    {
        type === HeadingType.H1 && (
            <h1
                id={id}
                class={`font-heading mb-4 font-bold sm:text-6xl lg:text-7xl ${color} ${overrideClass}`}>
                <slot />
            </h1>
        )
    }
    {
        type === HeadingType.H2 && (
            <h2 id={id} class={`font-heading text-2xl font-bold ${color} ${overrideClass}`}>
                <slot />
            </h2>
        )
    }
    {
        type === HeadingType.H3 && (
            <h3 id={id} class={`font-heading text-xl font-semibold ${color} ${overrideClass}`}>
                <slot />
            </h3>
        )
    }
    {
        type === HeadingType.H4 && (
            <h4 id={id} class={`font-heading text-xl font-medium ${color} ${overrideClass}`}>
                <slot />
            </h4>
        )
    }
    {
        type === HeadingType.H5 && (
            <h5 id={id} class={`font-heading text-lg font-bold ${color} ${overrideClass}`}>
                <slot />
            </h5>
        )
    }
    {
        type === HeadingType.H6 && (
            <h6 id={id} class={`font-heading text-base font-bold ${color} ${overrideClass}`}>
                <slot />
            </h6>
        )
    }
</>
